#!/usr/bin/env ruby
# encoding: utf-8
require 'nokogiri'
require 'cgi'
require 'yaml'
require 'uri'

if ARGV[0] =~ /^-h|--help/
  require 'goog'
  puts <<END
Usage: goog [-n pages] [-d date range type] [query]

Synopsis:
    -n [pages]                      Return n pages of results
    -d [date range type]            Limit results to date range (see below for codes)
    -h, --help                      Show this message

Date range types for -d option:
  
    h   last hour
    d   last day (24 hours)
    w   last week
    m   last month
    y   last year

goog #{Goog::VERSION}
http://github.com/danchoi/goog
Author: Daniel Choi <dhchoi@gmail.com>
END
  exit
end

pages = ARGV[0] =~ /^-n/ ? (ARGV.shift && ARGV.shift[/\d+/,0].to_i) : 1
date_range = ARGV[0] =~ /^-d/ ? (ARGV.shift && ARGV.shift[/[hdwmy]/,0]) : nil

query = ARGV.join(' ')
unless query
  abort "Please provide a search query"
end

unless `which tidy` =~ /tidy/
  abort "No tidy found. Please install tidy."
end
if RUBY_VERSION !~ /^1.9/
  abort "Requires Ruby 1.9"
end
query = "/search?q=#{CGI.escape query}"
if date_range 
  query += "&as_qdr=#{date_range}"
end
(1..pages).each do |page| 
  if query.nil?
    exit
  end
  curl = "curl -s -A Mozilla 'http://www.google.com#{query}' | tidy --wrap 0 -indent -ashtml --merge-divs yes 2>/dev/null"
  resp = %x{#{curl}}
  doc = Nokogiri::HTML resp, nil, 'iso-8859-1'
  doc.search('ol li.g').each_with_index {|li, index|
    next unless li.at('h3 a')
    link = li.at('h3 a')['href'].sub(/^\/url\?q=/, '')
    if link !~ /^http:/
      link = "http://google.com#{link}"
    end
    title = li.at('h3 a').inner_text
    description = li.at('div.s')
    excerpt = if description
                description.search('span').remove 
                excerpt = begin 
                  s = description.inner_text.strip
                  s.gsub(/\s{2,}/, ' ')
                rescue
                  puts "ERROR"
                  puts description
                  puts $!
                end
              end
    number = (page - 1) * 10 + (index + 1)
    res = if STDOUT.tty?
      ["#{number}. \e[36m#{title}\e[0m", excerpt, "\e[35m#{link }\e[0m"]
    else
      ["#{number}. #{title}", excerpt, link]
    end
    puts res.compact
    puts
  }
  # find next page link
  # <a href="/search?q=why+the+lucky+stiff&amp;hl=en&amp;ie=UTF-8&amp;prmd=ivns&amp;ei=K6akT9bRBeaM6QHjifmwBA&amp;start=10&amp;sa=N" style="text-align:left"><span style="display:block;margin-left:53px">Next</span></a>
  next_page_href = (nextspan = doc.at("//span[contains(child::text(),'Next')]")) && nextspan.parent[:href]
  query = next_page_href
end


